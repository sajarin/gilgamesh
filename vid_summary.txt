That's very close to what we're going to do here, yeah.AUDIENCE: Well, establishing what's false, you can know what things aren't true.In mathematics, we have a mathematical proof is a verification of a proposition by a chain of logical deductions from a set of axioms.Now, that's a true proposition.All right, now to see if this proposition is true, we need to make sure that this predicate is true for every natural number n. So let's see if we can check that.It is not true.And here's your predicate, which of course, the truth of this depends on the values of a, b, c and d. It took a long time to figure out that actually, there was a solution here.So yeah, you don't have to really have to worry about this.Is this true or false, this proposition?And there's lots of ways of doing it.It's true.Is that true?Is that true?And that's it.And if was false, then it'd be true and you'd have a contradiction.There's no proof that an axiom is true.Now, a set of axioms is consistent if no proposition can be proved to be both true and false.A set of axioms is said to be complete if it can be used to prove every proposition is either true or false.And in the 1930s, he proved it's not possible that there exists any set of axioms that are both consistent and complete.We're not going to prove that here.That's very close to what we're going to do here, yeah.AUDIENCE: Well, establishing what's false, you can know what things aren't true.PROFESSOR: Yes, truth-- yeah, that's great.In mathematics, we have a mathematical proof is a verification of a proposition by a chain of logical deductions from a set of axioms.And we're going to spend the rest of the class today talking about each of these, and then give an example of a proof.Now, that's a true proposition.And that means for every possible choice of n-- and this is in the natural numbers, which is the set 0, 1, 2, 3, and so forth.All right, now to see if this proposition is true, we need to make sure that this predicate is true for every natural number n. So let's see if we can check that.It is not true.Now, this proposition was conjectured to be true by Euler in 1769.And here's your predicate, which of course, the truth of this depends on the values of a, b, c and d. It took a long time to figure out that actually, there was a solution here.All right, so we'll talk more about this the week after next when we do number theory, and we work up to RSA and how that cryptosystem works, and why factoring is so important.So yeah, you don't have to really have to worry about this.Is this true or false, this proposition?And then most people believe now that it's right, and that his original proof might not have had all the details, but he had the right structure of the proof.And there's lots of ways of doing it.It's true.Is that true?Is that true?And that's it.Well, it's true it's not a proposition.And if was false, then it'd be true and you'd have a contradiction.An axiom is a proposition that is assumed to be true.There's no proof that an axiom is true.Now, a set of axioms is consistent if no proposition can be proved to be both true and false.A set of axioms is said to be complete if it can be used to prove every proposition is either true or false.Everything is-- you can prove it's true, or you can prove it's false.And you want a set that's powerful enough that allows you to prove everything is true or false, one of the two.And in the 1930s, he proved it's not possible that there exists any set of axioms that are both consistent and complete.We're not going to prove that here.That's very close to what we're going to do here, yeah.AUDIENCE: Well, establishing what's false, you can know what things aren't true.PROFESSOR: Yes, truth-- yeah, that's great.In mathematics, we have a mathematical proof is a verification of a proposition by a chain of logical deductions from a set of axioms.And we're going to spend the rest of the class today talking about each of these, and then give an example of a proof.Now, that's a true proposition.And that means for every possible choice of n-- and this is in the natural numbers, which is the set 0, 1, 2, 3, and so forth.All right, now to see if this proposition is true, we need to make sure that this predicate is true for every natural number n. So let's see if we can check that.It is not true.Now, this proposition was conjectured to be true by Euler in 1769.And here's your predicate, which of course, the truth of this depends on the values of a, b, c and d. It took a long time to figure out that actually, there was a solution here.All right, so we'll talk more about this the week after next when we do number theory, and we work up to RSA and how that cryptosystem works, and why factoring is so important.So yeah, you don't have to really have to worry about this.Is this true or false, this proposition?And then most people believe now that it's right, and that his original proof might not have had all the details, but he had the right structure of the proof.And there's lots of ways of doing it.It's true.Is that true?Is that true?And that's it.Well, it's true it's not a proposition.And if was false, then it'd be true and you'd have a contradiction.An axiom is a proposition that is assumed to be true.There's no proof that an axiom is true.Now, a set of axioms is consistent if no proposition can be proved to be both true and false.A set of axioms is said to be complete if it can be used to prove every proposition is either true or false.Everything is-- you can prove it's true, or you can prove it's false.And you want a set that's powerful enough that allows you to prove everything is true or false, one of the two.And in the 1930s, he proved it's not possible that there exists any set of axioms that are both consistent and complete.We're not going to prove that here.That's very close to what we're going to do here, yeah.AUDIENCE: Well, establishing what's false, you can know what things aren't true.PROFESSOR: Yes, truth-- yeah, that's great.In mathematics, we have a mathematical proof is a verification of a proposition by a chain of logical deductions from a set of axioms.And we're going to spend the rest of the class today talking about each of these, and then give an example of a proof.Now, that's a true proposition.And that means for every possible choice of n-- and this is in the natural numbers, which is the set 0, 1, 2, 3, and so forth.All right, now to see if this proposition is true, we need to make sure that this predicate is true for every natural number n. So let's see if we can check that.It is not true.Now, this proposition was conjectured to be true by Euler in 1769.And here's your predicate, which of course, the truth of this depends on the values of a, b, c and d. It took a long time to figure out that actually, there was a solution here.All right, so we'll talk more about this the week after next when we do number theory, and we work up to RSA and how that cryptosystem works, and why factoring is so important.So yeah, you don't have to really have to worry about this.Is this true or false, this proposition?And then most people believe now that it's right, and that his original proof might not have had all the details, but he had the right structure of the proof.And there's lots of ways of doing it.It's true.Is that true?Is that true?And that's it.Well, it's true it's not a proposition.And if was false, then it'd be true and you'd have a contradiction.An axiom is a proposition that is assumed to be true.There's no proof that an axiom is true.Now, a set of axioms is consistent if no proposition can be proved to be both true and false.A set of axioms is said to be complete if it can be used to prove every proposition is either true or false.Everything is-- you can prove it's true, or you can prove it's false.And you want a set that's powerful enough that allows you to prove everything is true or false, one of the two.And in the 1930s, he proved it's not possible that there exists any set of axioms that are both consistent and complete.We're not going to prove that here.So, one of the nice qualities of Python is that you can just run the interpreter, so I just type "python" in here.It'll say, "Okay, I know you--now what do you want to do?"We're just like, get right to it.Though, with the jolly a little bit aligned, the way you can think about in Python is that a value, you know, "a" in this case, it points to something and in or a string.So, let me show--so, what's going to happen is we're going to do all sorts of Python.You can be the interpreter and if you have some questions about, "Oh, what if I do to--do the--where?"And so, I'm going to use that as kind of a--just real basic example to start things up.So, what I'd like to do is, you know, right here is a very basic Python program.So, if I go down here to my--same directory, so, the way you run this thing--well, there's two ways, you could type "python," the name of the interpreter, and then give it "hello.py," say, "Hey, please run that."In the Unix way, the more modern thing is that you would--you have the XQ bit set--I'll have talk about this a little bit, and so then, you can just say, that's the, you know, whatever.Okay, so let me show you--I want to, you know, I going to add a few features to this thing; and so just to, kind of, show you some things.So, I want to show you two ways that you can, kind of, research what a module is and what it has in it.And what that does is to just, kind of, shows me all the symbols that are defined in there.So, like the first couple hits, like yeah, it just is the docs for the Python sys exit function or I've been doing a Python--I'll show you strings in a second.So, when you see something like that and it refers to a module that you're trying to use, then what that means is--oh, right, I forgot to do the import.So, that's my little "hello" function that has two lines in it and I'll talk about the plus and--you know, I'm glossing over some details there, but you can sort of see what it does.If the--if we want to look right--so I'll put the colon back there--let's just have the indentation define how the blocks of code go.And I've showed you--I've sort of used strings and lists and a few things informally, but I never really explained them, so I want to kind of slowdown a little bit here and actually talk about how some of these things work.Now the reason this is called a method and this is basic object oriented programming just as a--you know there's some--a few things that are very easy and that's we're going to work on for the next couple of days."A" this is, it points to the string, all right, I could think of a string object and with this syntax where I say pointer to a thing dot and them the name of the method I want to run.I just want you to know that there are a lot of built-in ones and either you could look at the Python (ph) where it talks about some of the common ones, or you could type, you know, in Google, type, Python string, or maybe Python string method and go to the page where it list them all.So, I want to, I want to show you this one--how are we do on time?So, if I'd say--if I refer to "a [0]" that's the "h"--this is how I should have done it for or "a [1]" that's the "e." Or if I say, "What's the len of this thing?"So the way this is going to work is if I say "a" and I'll put the square bracket but I'm going to put a colon in the middle here, and I'm going to refer--I'm going to indicate both the start and the end.I want you to start at one; so that's the first index number and then the second number--yeah, it's going to say, it's going to go up to but not including that one.So, if I wanted to--if I wanted to say, "Hello," I guess, I could say, what is it, a one--oops, "a [1:5]."The five is kind of one out of bounds there but, actually, what you could do in the slice syntax is if you omit the second, the thing after the colon, it just goes all the way through the end of the string.So go in the day one directory, and the first thing I want you to look at is there's this, there's a file there called--oops, no, not that one.Evil" and just in English, there's a little description of like what it is I want you to do and it gives a little example but then the code it just not done.Oh, all right so here's what I'd like to do, it's now, it's about 10:50, so I'm going to imagine; I want you to work on this with me maybe about half hour for that, so that's--what I'd like you to do is then go have lunch.